#!/bin/sh
#
# check-host -- check if one or several hosts are alive and send status
#               notifications.
#
# Usage: check-host hostname
#        check-host -f config-file
#        check-host -t config-file
#
# Note: If called from crontab as a cronjob you would probably want to add
#       "> /dev/null".
#
# Assumptions: The system is OpenBSD-stable or -current.
#
# Dependencies: cURL
#
# Copyright (c) 2015-2016, Joel A. Nilsson <joel@alikzus.se>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#

################################################################################
# PRAGMAS
################################################################################

set -u
trap "abort" HUP INT QUIT TERM

################################################################################
# DEFAULT CONFIGURATION
# Should be set with a configuration file, e.g. ~/check-host.conf
################################################################################

MASTERS=""
HOSTS=""

PUSHOVER_TOKEN=""
PUSHOVER_USER=""

################################################################################
# CONSTANTS
################################################################################

NAME="check-host"
CHECKPOINT="www.google.se"
_HOST="$(/bin/hostname -s | perl -nle 'print "\u\L$_"')"
_TMPDIR="/tmp/$NAME"

################################################################################
# SUBROUTINES
################################################################################

abort() {
    say "Aborted"
    exit 1
}

error() {
    fault "$1"
    abort
}

fault() {
    echo "!!! ${*}"
}

say() {
    echo "==> ${*}"
}

usage() {
    echo
    echo "Usage: $NAME [-ft] filename/host" >&2
    echo
    echo "Options:"
    echo "  -f    config file with hosts et cetera"
    echo "  -t    send a test notification using a config file"
    echo
    exit 1
}

quit() {
    say "$1"
    exit 0
}

#===============================================================================

check_connectivity() {
    if ! [ -z "$CHECKPOINT" ]; then
        ping_host "$CHECKPOINT" 3
        if [ "$got_response" -eq 0 ]; then
            quit "No connectivity; cannot proceed"
        fi
    else
        error "No checkpoint was defined"
    fi
}

# ping_host $hostname $number-of-tries 
ping_host() {
    tries=0
    while [ $tries -lt "$2" ]; do
        /sbin/ping -c 1 -q "$1" > /dev/null 2<&1
        if [ $? -eq 0 ]; then
            got_response=1
            break
        else
            got_response=0
        fi
        tries=$((tries + 1))
        sleep 1
    done
}

poke_master() {
    if ! [ -z "$MASTERS" ]; then
        for master in $MASTERS; do
            ping_host "$master" 10
            if [ "$got_response" -eq 0 ]; then
                say "The master is not responding"
            else
                quit "Nothing to be done"
            fi
        done
    else
        say "No master was defined"
    fi
}

# notify $message
notify() {
    message="$1"

    curl -s \
        --form-string "token=$PUSHOVER_TOKEN" \
        --form-string "user=$PUSHOVER_USER" \
        --form-string "title=$_HOST" \
        --form-string "message=$message" \
        https://api.pushover.net/1/messages.json \
        > /dev/null &
}

#===============================================================================

check_response() {
    cache="${_TMPDIR}/$1"
    ping_host "$1" 60
    if [ $got_response -eq 0 ]; then
        no_response "$1"
    else
        response "$1"
    fi
}

no_response() {
    if [ -f "$cache" ]; then
        count="$(cat "$cache")"

        if [ "$count" -le 12 ]; then
            time=60
        elif [ "$count" -gt 12 ] && [ "$count" -le 18 ]; then
            time=120
        else
            time=720
        fi

        if [ "$(/usr/bin/find "$cache" -mmin +$time)" ]; then
            count=$((count + 1))
            echo "$count" > "$cache"
            notify "$1 is still NOT responding to pings"
        fi
    else
        echo "1" > "$cache"
        notify "$1 is NOT responding to pings"
    fi
}

response() {
    if [ -f "$cache" ]; then
        /bin/rm "$cache" | fault "Could NOT clear the cache"
        notify "$1 has started to respond to pings again"
    fi
}

################################################################################
# MAIN
################################################################################

if [ "$(/usr/bin/id -u)" -eq 0 ]; then
    error "You should NOT run $NAME with root privileges"
fi

file_is_specified=0
test_mode=0

while getopts 'f:t' arg; do
    case $arg in
    f)  file_is_specified=1 ;;
    t)  test_mode=1 ;;
    *)  usage ;;
    esac
done

if ! [ -d "$_TMPDIR" ]; then
    /bin/mkdir "$_TMPDIR" | error "Could NOT create the temporary cache"
fi

check_connectivity

if [ $file_is_specified -eq 1 ] || [ $test_mode -eq 1 ]; then
    config_file="$2"

    if [ -f "$config_file" ]; then
        # shellcheck source=/dev/null
        . "$config_file"
    else
        error "The config file $config_file does not exist"
    fi

    if [ $test_mode -eq 1 ]; then
        notify "A trick from Nakor"
        quit "Test done"
    fi

    poke_master

    if ! [ -z "$HOSTS" ]; then
        for host in $HOSTS; do
            check_response "$host"
        done
    else
        error "No hosts are defined"
    fi
elif [ $file_is_specified -eq 0 ] || [ $test_mode -eq 1 ]; then
    error "A configuration file shall be defined for use with test mode"
else
    check_response "$1"
fi

quit "Done"

################################################################################
# Last Changed: 2016-09-25 14:44:11 CEST
